import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import { Roboto } from 'next/font/google';
import {ThemeProvider} from "@/components/providers/theme-provider"
import { cn } from "@/lib/utils";
import {ModelProvider} from "@/components/providers/model-provider"
import {SocketProvider} from "@/components/providers/socket-provider"
import { QueryProvider } from "@/components/providers/query-provider";
const font = Roboto({
  weight: ['400', '700'], // Specify font weights
  subsets: ['latin'],     // Specify subsets
});
// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(font.className, "bg-white dark:bg-[#313338]")}>
        <ThemeProvider 
          attribute="class"
          defaultTheme="dark"
          enableSystem={true}
          storageKey="discord-theme"
        >
          <SocketProvider>
          <ModelProvider/>
          <QueryProvider>
            {children}
          </QueryProvider>
          </SocketProvider>
        </ThemeProvider>
      </body>
    </html>
    </ClerkProvider>
  );
}
